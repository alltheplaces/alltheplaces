version: 0.2

env:
  variables:
    BUCKET: alltheplaces.openaddresses.io
    CODEBUILD_CACHE_BUCKET: codebuild-cache.openaddresses.io
  secrets-manager:
    ZYTE_API_KEY: "alltheplaces:ZYTE_API_KEY"
    GITHUB_APP_ID: "alltheplaces:GITHUB_APP_ID"
    GITHUB_APP_PRIVATE_KEY_BASE64: "alltheplaces:GITHUB_APP_PRIVATE_KEY_BASE64"
    GITHUB_APP_INSTALLATION_ID: "alltheplaces:GITHUB_APP_INSTALLATION_ID"

phases:
  install:
    runtime-versions:
      python: 3.11
  pre_build:
    commands:
      - |
        # uv will already be installed in the image,
        # but we need to set up the cache

        # calculate a hash of the uv lockfile
        # this is used to cache the python environment
        # if the lockfile changes, the cache will be invalidated
        UV_HASH=$(sha256sum uv.lock | cut -d ' ' -f 1)
        PLATFORM=$(uname -m)
        CACHE_FILE_NAME="${UV_HASH}-${PLATFORM}.tar.gz"

        # store where uv is caching stuff
        PYTHON_INSTALL_LOCATION=$(uv cache dir)
        echo "uv cache location: ${PYTHON_INSTALL_LOCATION}"

        # check if the cache exists on S3
        REMOTE_CACHE_LOCATION="s3://${CODEBUILD_CACHE_BUCKET}/atp-uv-cache/${CACHE_FILE_NAME}"
        if aws s3 --only-show-errors cp $REMOTE_CACHE_LOCATION .; then
          # if the cache exists, extract it to the install location
          echo "Cache found. Extracting ${REMOTE_CACHE_LOCATION} to ${PYTHON_INSTALL_LOCATION}"
          mkdir -p ${PYTHON_INSTALL_LOCATION}
          tar -xzf "${CACHE_FILE_NAME}" -C /
        else
          # if the cache does not exist, install dependencies and save the cache to S3
          echo "Cache not found. Installing dependencies."
          uv sync --frozen
          retval=$?
          if [ ! $retval -eq 0 ]; then
            (>&2 echo "uv sync failed. refusing to continue.")
            exit 1
          fi

          echo "Caching uv environment to $REMOTE_CACHE_LOCATION"
          tar -czf "${CACHE_FILE_NAME}" "${PYTHON_INSTALL_LOCATION}"
          aws s3 --only-show-errors cp "${CACHE_FILE_NAME}" "${REMOTE_CACHE_LOCATION}"
        fi
  build:
    commands:
      - uv scrapy check
      - /bin/bash ci/run_pr_spiders.sh
